{"ast":null,"code":"import axios from 'axios';\nconst API_KEY = '1fc7ebdf437586e4a64c8ec8e9bdc7c9'; // 새로운 OpenWeatherMap API 키\n\n// getWeatherData 함수: 도시 이름을 받아 해당 도시의 날씨 데이터를 가져옴\nconst getWeatherData = async city => {\n  try {\n    // OpenWeatherMap API 호출\n    const response = await axios.get('https://api.openweathermap.org/data/2.5/weather', {\n      params: {\n        q: city,\n        units: 'metric',\n        // 섭씨 단위로 설정\n        appid: API_KEY // API 키 설정\n      }\n    });\n    console.log('Weather data:', response.data); // 응답 데이터 확인 (디버그 용도)\n    return response.data;\n  } catch (error) {\n    // 에러 처리\n    console.error('Error fetching weather data:', error);\n    if (error.response) {\n      console.error('Response data:', error.response.data);\n      console.error('Response status:', error.response.status);\n      console.error('Response headers:', error.response.headers);\n    }\n    throw error;\n  }\n};\nexport default getWeatherData;","map":{"version":3,"names":["axios","API_KEY","getWeatherData","city","response","get","params","q","units","appid","console","log","data","error","status","headers"],"sources":["C:/Users/USER/Desktop/새 폴더/Surfun/client/src/services/WeatherService.jsx"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = '1fc7ebdf437586e4a64c8ec8e9bdc7c9'; // 새로운 OpenWeatherMap API 키\r\n\r\n// getWeatherData 함수: 도시 이름을 받아 해당 도시의 날씨 데이터를 가져옴\r\nconst getWeatherData = async (city) => {\r\n    try {\r\n        // OpenWeatherMap API 호출\r\n        const response = await axios.get('https://api.openweathermap.org/data/2.5/weather', {\r\n            params: {\r\n                q: city,\r\n                units: 'metric', // 섭씨 단위로 설정\r\n                appid: API_KEY // API 키 설정\r\n            }\r\n        });\r\n        console.log('Weather data:', response.data); // 응답 데이터 확인 (디버그 용도)\r\n        return response.data;\r\n    } catch (error) {\r\n        // 에러 처리\r\n        console.error('Error fetching weather data:', error);\r\n        if (error.response) {\r\n            console.error('Response data:', error.response.data);\r\n            console.error('Response status:', error.response.status);\r\n            console.error('Response headers:', error.response.headers);\r\n        }\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport default getWeatherData;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,kCAAkC,CAAC,CAAC;;AAEpD;AACA,MAAMC,cAAc,GAAG,MAAOC,IAAI,IAAK;EACnC,IAAI;IACA;IACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,iDAAiD,EAAE;MAChFC,MAAM,EAAE;QACJC,CAAC,EAAEJ,IAAI;QACPK,KAAK,EAAE,QAAQ;QAAE;QACjBC,KAAK,EAAER,OAAO,CAAC;MACnB;IACJ,CAAC,CAAC;IACFS,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAAC;IAC7C,OAAOR,QAAQ,CAACQ,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ;IACAH,OAAO,CAACG,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,IAAIA,KAAK,CAACT,QAAQ,EAAE;MAChBM,OAAO,CAACG,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACT,QAAQ,CAACQ,IAAI,CAAC;MACpDF,OAAO,CAACG,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAACT,QAAQ,CAACU,MAAM,CAAC;MACxDJ,OAAO,CAACG,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAACT,QAAQ,CAACW,OAAO,CAAC;IAC9D;IACA,MAAMF,KAAK;EACf;AACJ,CAAC;AAED,eAAeX,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}