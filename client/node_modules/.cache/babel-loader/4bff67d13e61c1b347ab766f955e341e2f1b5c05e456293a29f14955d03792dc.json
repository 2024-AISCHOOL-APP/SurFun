{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\surf\\\\SurFun\\\\client\\\\src\\\\components\\\\pages\\\\SpotSelect.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport Map from \"./components/Map\";\nimport { mapOptions } from \"./components/MapConfiguration\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpotSelect = () => {\n  _s();\n  const new_script = src => {\n    return new Promise((resolve, reject) => {\n      const script = document.createElement('script');\n      script.src = src;\n      script.addEventListener('load', () => {\n        resolve();\n      });\n      script.addEventListener('error', e => {\n        reject(e);\n      });\n      document.head.appendChild(script);\n    });\n  };\n  useEffect(() => {\n    //카카오맵 스크립트 읽어오기\n    const my_script = new_script('https://dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey 50155a7f2d6ffa157b4670ed3b77f5a5');\n\n    //스크립트 읽기 완료 후 카카오맵 설정\n    my_script.then(() => {\n      console.log('script loaded!!!');\n      const kakao = window['kakao'];\n      kakao.maps.load(() => {\n        const mapContainer = document.getElementById('map');\n        const options = {\n          center: new kakao.maps.LatLng(37.56000302825312, 126.97540593203321),\n          //좌표설정\n          level: 3\n        };\n        const map = new kakao.maps.Map(mapContainer, options); //맵생성\n        //마커설정\n        const markerPosition = new kakao.maps.LatLng(37.56000302825312, 126.97540593203321);\n        const marker = new kakao.maps.Marker({\n          position: markerPosition\n        });\n        marker.setMap(map);\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to SpotPage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      autoPlay: true,\n      loop: true,\n      muted: true,\n      className: \"video-background\",\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"/videos/surfing.mp4\",\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" \\uC5EC\\uAE30\\uC5D0 \\uB0A0\\uC528 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      className: \"map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 13\n  }, this);\n};\n_s(SpotSelect, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = SpotSelect;\nexport default SpotSelect;\nvar _c;\n$RefreshReg$(_c, \"SpotSelect\");","map":{"version":3,"names":["React","useEffect","Map","mapOptions","jsxDEV","_jsxDEV","SpotSelect","_s","new_script","src","Promise","resolve","reject","script","document","createElement","addEventListener","e","head","appendChild","my_script","then","console","log","kakao","window","maps","load","mapContainer","getElementById","options","center","LatLng","level","map","markerPosition","marker","Marker","position","setMap","children","fileName","_jsxFileName","lineNumber","columnNumber","autoPlay","loop","muted","className","type","id","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/surf/SurFun/client/src/components/pages/SpotSelect.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport Map from \"./components/Map\";\r\nimport {mapOptions} from \"./components/MapConfiguration\";\r\n\r\nconst SpotSelect=()=> {\r\n    const new_script = src => { \r\n        return new Promise((resolve, reject) => { \r\n          const script = document.createElement('script'); \r\n          script.src = src; \r\n          script.addEventListener('load', () => { \r\n            resolve(); \r\n          }); \r\n          script.addEventListener('error', e => { \r\n            reject(e); \r\n          }); \r\n          document.head.appendChild(script); \r\n        }); \r\n      };\r\n      useEffect(() => { \r\n        //카카오맵 스크립트 읽어오기\r\n        const my_script = new_script('https://dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey 50155a7f2d6ffa157b4670ed3b77f5a5');\r\n        \r\n        //스크립트 읽기 완료 후 카카오맵 설정\r\n        my_script.then(() => { \r\n          console.log('script loaded!!!');  \r\n          const kakao = window['kakao']; \r\n          kakao.maps.load(() => {\r\n            const mapContainer = document.getElementById('map');\r\n            const options = { \r\n              center: new kakao.maps.LatLng(37.56000302825312, 126.97540593203321), //좌표설정\r\n              level: 3 \r\n            }; \r\n            const map = new kakao.maps.Map(mapContainer, options); //맵생성\r\n            //마커설정\r\n            const markerPosition = new kakao.maps.LatLng(37.56000302825312, 126.97540593203321); \r\n            const marker = new kakao.maps.Marker({ \r\n              position: markerPosition\r\n            }); \r\n            marker.setMap(map); \r\n          });   \r\n        }); \r\n      }, []);\r\n    \r\n     \r\n    \r\n    \r\n        return (\r\n            <div>\r\n                    <h1>Welcome to SpotPage</h1>\r\n                <video autoPlay loop muted className=\"video-background\">\r\n                <source src=\"/videos/surfing.mp4\" type=\"video/mp4\" />\r\n            </video>\r\n                <h2> 여기에 날씨 </h2>\r\n            <div id='map' className='map'/>\r\n            \r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default SpotSelect;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,GAAG,MAAM,kBAAkB;AAClC,SAAQC,UAAU,QAAO,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,UAAU,GAACA,CAAA,KAAK;EAAAC,EAAA;EAClB,MAAMC,UAAU,GAAGC,GAAG,IAAI;IACtB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC/CF,MAAM,CAACJ,GAAG,GAAGA,GAAG;MAChBI,MAAM,CAACG,gBAAgB,CAAC,MAAM,EAAE,MAAM;QACpCL,OAAO,CAAC,CAAC;MACX,CAAC,CAAC;MACFE,MAAM,CAACG,gBAAgB,CAAC,OAAO,EAAEC,CAAC,IAAI;QACpCL,MAAM,CAACK,CAAC,CAAC;MACX,CAAC,CAAC;MACFH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,MAAM,CAAC;IACnC,CAAC,CAAC;EACJ,CAAC;EACDZ,SAAS,CAAC,MAAM;IACd;IACA,MAAMmB,SAAS,GAAGZ,UAAU,CAAC,8FAA8F,CAAC;;IAE5H;IACAY,SAAS,CAACC,IAAI,CAAC,MAAM;MACnBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/B,MAAMC,KAAK,GAAGC,MAAM,CAAC,OAAO,CAAC;MAC7BD,KAAK,CAACE,IAAI,CAACC,IAAI,CAAC,MAAM;QACpB,MAAMC,YAAY,GAAGd,QAAQ,CAACe,cAAc,CAAC,KAAK,CAAC;QACnD,MAAMC,OAAO,GAAG;UACdC,MAAM,EAAE,IAAIP,KAAK,CAACE,IAAI,CAACM,MAAM,CAAC,iBAAiB,EAAE,kBAAkB,CAAC;UAAE;UACtEC,KAAK,EAAE;QACT,CAAC;QACD,MAAMC,GAAG,GAAG,IAAIV,KAAK,CAACE,IAAI,CAACxB,GAAG,CAAC0B,YAAY,EAAEE,OAAO,CAAC,CAAC,CAAC;QACvD;QACA,MAAMK,cAAc,GAAG,IAAIX,KAAK,CAACE,IAAI,CAACM,MAAM,CAAC,iBAAiB,EAAE,kBAAkB,CAAC;QACnF,MAAMI,MAAM,GAAG,IAAIZ,KAAK,CAACE,IAAI,CAACW,MAAM,CAAC;UACnCC,QAAQ,EAAEH;QACZ,CAAC,CAAC;QACFC,MAAM,CAACG,MAAM,CAACL,GAAG,CAAC;MACpB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAKJ,oBACI7B,OAAA;IAAAmC,QAAA,gBACQnC,OAAA;MAAAmC,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCvC,OAAA;MAAOwC,QAAQ;MAACC,IAAI;MAACC,KAAK;MAACC,SAAS,EAAC,kBAAkB;MAAAR,QAAA,eACvDnC,OAAA;QAAQI,GAAG,EAAC,qBAAqB;QAACwC,IAAI,EAAC;MAAW;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACJvC,OAAA;MAAAmC,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBvC,OAAA;MAAK6C,EAAE,EAAC,KAAK;MAACF,SAAS,EAAC;IAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAG1B,CAAC;AAEd,CAAC;AAAArC,EAAA,CAtDCD,UAAU;AAAA6C,EAAA,GAAV7C,UAAU;AAwDhB,eAAeA,UAAU;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}