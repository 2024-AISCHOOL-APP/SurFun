{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\surf\\\\surfun\\\\client\\\\src\\\\components\\\\widgets\\\\WeatherDisplay.jsx\";\nimport React from 'react';\n\n// WeatherDisplay 컴포넌트: weatherData prop을 받아 현재 날씨를 표시\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeatherDisplay({\n  weatherData\n}) {\n  // weatherData가 없으면 로딩 메시지 표시\n  if (!weatherData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 16\n    }, this);\n  }\n\n  // weatherData에서 필요한 정보 추출\n  const {\n    name,\n    main,\n    weather\n  } = weatherData;\n  const iconUrl = `http://openweathermap.org/img/wn/${weather[0].icon}@2x.png`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Current Weather in \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: iconUrl,\n        alt: weather[0].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temperature: \", main.temp, \" \\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Weather: \", weather[0].description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Humidity: \", main.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Pressure: \", main.pressure, \" hPa\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_c = WeatherDisplay;\nexport default WeatherDisplay;\nvar _c;\n$RefreshReg$(_c, \"WeatherDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","WeatherDisplay","weatherData","children","fileName","_jsxFileName","lineNumber","columnNumber","name","main","weather","iconUrl","icon","style","display","alignItems","src","alt","description","temp","humidity","pressure","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/surf/surfun/client/src/components/widgets/WeatherDisplay.jsx"],"sourcesContent":["import React from 'react';\r\n\r\n// WeatherDisplay 컴포넌트: weatherData prop을 받아 현재 날씨를 표시\r\nfunction WeatherDisplay({ weatherData }) {\r\n    // weatherData가 없으면 로딩 메시지 표시\r\n    if (!weatherData) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    // weatherData에서 필요한 정보 추출\r\n    const { name, main, weather } = weatherData;\r\n    const iconUrl = `http://openweathermap.org/img/wn/${weather[0].icon}@2x.png`;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Current Weather in {name}</h2>\r\n            <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                <img src={iconUrl} alt={weather[0].description} />\r\n                <div>\r\n                    <p>Temperature: {main.temp} °C</p>\r\n                    <p>Weather: {weather[0].description}</p>\r\n                    <p>Humidity: {main.humidity}%</p>\r\n                    <p>Pressure: {main.pressure} hPa</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WeatherDisplay;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,cAAcA,CAAC;EAAEC;AAAY,CAAC,EAAE;EACrC;EACA,IAAI,CAACA,WAAW,EAAE;IACd,oBAAOF,OAAA;MAAAG,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;;EAEA;EACA,MAAM;IAAEC,IAAI;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGR,WAAW;EAC3C,MAAMS,OAAO,GAAG,oCAAoCD,OAAO,CAAC,CAAC,CAAC,CAACE,IAAI,SAAS;EAE5E,oBACIZ,OAAA;IAAAG,QAAA,gBACIH,OAAA;MAAAG,QAAA,GAAI,qBAAmB,EAACK,IAAI;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClCP,OAAA;MAAKa,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAZ,QAAA,gBAClDH,OAAA;QAAKgB,GAAG,EAAEL,OAAQ;QAACM,GAAG,EAAEP,OAAO,CAAC,CAAC,CAAC,CAACQ;MAAY;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClDP,OAAA;QAAAG,QAAA,gBACIH,OAAA;UAAAG,QAAA,GAAG,eAAa,EAACM,IAAI,CAACU,IAAI,EAAC,QAAG;QAAA;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAClCP,OAAA;UAAAG,QAAA,GAAG,WAAS,EAACO,OAAO,CAAC,CAAC,CAAC,CAACQ,WAAW;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxCP,OAAA;UAAAG,QAAA,GAAG,YAAU,EAACM,IAAI,CAACW,QAAQ,EAAC,GAAC;QAAA;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACjCP,OAAA;UAAAG,QAAA,GAAG,YAAU,EAACM,IAAI,CAACY,QAAQ,EAAC,MAAI;QAAA;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACe,EAAA,GAxBQrB,cAAc;AA0BvB,eAAeA,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}